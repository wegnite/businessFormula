{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/i18n/locale.ts"],"sourcesContent":["import { Pathnames } from \"next-intl/routing\";\n\nexport const locales = [\"en\", \"zh\"];\n\nexport const localeNames: any = {\n  en: \"English\",\n  zh: \"中文\",\n};\n\nexport const defaultLocale = \"en\";\n\nexport const localePrefix = \"as-needed\";\n\nexport const localeDetection =\n  process.env.NEXT_PUBLIC_LOCALE_DETECTION === \"true\";\n\nexport const pathnames = {\n  en: {\n    \"privacy-policy\": \"/privacy-policy\",\n    \"terms-of-service\": \"/terms-of-service\",\n  },\n} satisfies Pathnames<typeof locales>;\n"],"names":[],"mappings":";;;;;;;;AAEO,MAAM,UAAU;IAAC;IAAM;CAAK;AAE5B,MAAM,cAAmB;IAC9B,IAAI;IACJ,IAAI;AACN;AAEO,MAAM,gBAAgB;AAEtB,MAAM,eAAe;AAErB,MAAM,kBACX,QAAQ,GAAG,CAAC,4BAA4B,KAAK;AAExC,MAAM,YAAY;IACvB,IAAI;QACF,kBAAkB;QAClB,oBAAoB;IACtB;AACF"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/i18n/request.ts"],"sourcesContent":["import { getRequestConfig } from \"next-intl/server\";\nimport { routing } from \"./routing\";\n\nexport default getRequestConfig(async ({ requestLocale }) => {\n  let locale = await requestLocale;\n  if (!locale || !routing.locales.includes(locale as any)) {\n    locale = routing.defaultLocale;\n  }\n\n  if ([\"zh-CN\"].includes(locale)) {\n    locale = \"zh\";\n  }\n\n  if (!routing.locales.includes(locale as any)) {\n    locale = \"en\";\n  }\n\n  try {\n    const messages = (await import(`./messages/${locale.toLowerCase()}.json`))\n      .default;\n    return {\n      locale: locale,\n      messages: messages,\n    };\n  } catch (e) {\n    return {\n      locale: \"en\",\n      messages: (await import(`./messages/en.json`)).default,\n    };\n  }\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;uCAEe,CAAA,GAAA,odAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAE,aAAa,EAAE;IACtD,IAAI,SAAS,MAAM;IACnB,IAAI,CAAC,UAAU,CAAC,uHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAgB;QACvD,SAAS,uHAAA,CAAA,UAAO,CAAC,aAAa;IAChC;IAEA,IAAI;QAAC;KAAQ,CAAC,QAAQ,CAAC,SAAS;QAC9B,SAAS;IACX;IAEA,IAAI,CAAC,uHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAgB;QAC5C,SAAS;IACX;IAEA,IAAI;QACF,MAAM,WAAW,CAAC;;;;;;;;;kBAAa,CAAC,WAAW,EAAE,OAAO,WAAW,GAAG,KAAK,CAAC,CAAC,EACtE,OAAO;QACV,OAAO;YACL,QAAQ;YACR,UAAU;QACZ;IACF,EAAE,OAAO,GAAG;QACV,OAAO;YACL,QAAQ;YACR,UAAU,CAAC,mGAAkC,EAAE,OAAO;QACxD;IACF;AACF"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/i18n/routing.ts"],"sourcesContent":["import {\n  defaultLocale,\n  localeDetection,\n  localePrefix,\n  locales,\n  pathnames,\n} from \"./locale\";\n\nimport { createNavigation } from \"next-intl/navigation\";\nimport { defineRouting } from \"next-intl/routing\";\n\nexport const routing = defineRouting({\n  locales,\n  defaultLocale,\n  localePrefix,\n  pathnames,\n  localeDetection,\n});\n\nexport const { Link, redirect, usePathname, useRouter } =\n  createNavigation(routing);\n"],"names":[],"mappings":";;;;;;;AAAA;AAQA;AACA;;;;AAEO,MAAM,UAAU,CAAA,GAAA,4bAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,SAAA,sHAAA,CAAA,UAAO;IACP,eAAA,sHAAA,CAAA,gBAAa;IACb,cAAA,sHAAA,CAAA,eAAY;IACZ,WAAA,sHAAA,CAAA,YAAS;IACT,iBAAA,sHAAA,CAAA,kBAAe;AACjB;AAEO,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,GACrD,CAAA,GAAA,wdAAA,CAAA,mBAAgB,AAAD,EAAE"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import createMiddleware from \"next-intl/middleware\";\nimport { routing } from \"./i18n/routing\";\n\nexport default createMiddleware(routing);\n\nexport const config = {\n  matcher: [\n    \"/\",\n    \"/(en|en-US|zh|zh-CN|zh-TW|zh-HK|zh-MO|ja|ko|ru|fr|de|ar|es|it)/:path*\",\n    \"/((?!privacy-policy|terms-of-service|api/|_next|_vercel|.*\\\\..*).*)\",\n  ],\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;;;uCAEe,CAAA,GAAA,gZAAA,CAAA,UAAgB,AAAD,EAAE,uHAAA,CAAA,UAAO;AAEhC,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;KACD;AACH"}}]
}