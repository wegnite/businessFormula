{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/i18n/locale.ts"],"sourcesContent":["import { Pathnames } from \"next-intl/routing\";\n\nexport const locales = [\"en\", \"zh\"];\n\nexport const localeNames: any = {\n  en: \"English\",\n  zh: \"中文\",\n};\n\nexport const defaultLocale = \"en\";\n\nexport const localePrefix = \"as-needed\";\n\nexport const localeDetection =\n  process.env.NEXT_PUBLIC_LOCALE_DETECTION === \"true\";\n\nexport const pathnames = {\n  en: {\n    \"privacy-policy\": \"/privacy-policy\",\n    \"terms-of-service\": \"/terms-of-service\",\n  },\n} satisfies Pathnames<typeof locales>;\n"],"names":[],"mappings":";;;;;;;;AAEO,MAAM,UAAU;IAAC;IAAM;CAAK;AAE5B,MAAM,cAAmB;IAC9B,IAAI;IACJ,IAAI;AACN;AAEO,MAAM,gBAAgB;AAEtB,MAAM,eAAe;AAErB,MAAM,kBACX,QAAQ,GAAG,CAAC,4BAA4B,KAAK;AAExC,MAAM,YAAY;IACvB,IAAI;QACF,kBAAkB;QAClB,oBAAoB;IACtB;AACF","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/i18n/routing.ts"],"sourcesContent":["import {\n  defaultLocale,\n  localeDetection,\n  localePrefix,\n  locales,\n  pathnames,\n} from \"./locale\";\n\nimport { createNavigation } from \"next-intl/navigation\";\nimport { defineRouting } from \"next-intl/routing\";\n\nexport const routing = defineRouting({\n  locales,\n  defaultLocale,\n  localePrefix,\n  pathnames,\n  localeDetection,\n});\n\nexport const { Link, redirect, usePathname, useRouter } =\n  createNavigation(routing);\n"],"names":[],"mappings":";;;;;;;AAAA;AAQA;AACA;;;;AAEO,MAAM,UAAU,CAAA,GAAA,obAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,SAAA,8GAAA,CAAA,UAAO;IACP,eAAA,8GAAA,CAAA,gBAAa;IACb,cAAA,8GAAA,CAAA,eAAY;IACZ,WAAA,8GAAA,CAAA,YAAS;IACT,iBAAA,8GAAA,CAAA,kBAAe;AACjB;AAEO,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,GACrD,CAAA,GAAA,gdAAA,CAAA,mBAAgB,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/i18n/request.ts"],"sourcesContent":["import { getRequestConfig } from \"next-intl/server\";\nimport { routing } from \"./routing\";\n\nexport default getRequestConfig(async ({ requestLocale }) => {\n  let locale = await requestLocale;\n  if (!locale || !routing.locales.includes(locale as any)) {\n    locale = routing.defaultLocale;\n  }\n\n  if ([\"zh-CN\"].includes(locale)) {\n    locale = \"zh\";\n  }\n\n  if (!routing.locales.includes(locale as any)) {\n    locale = \"en\";\n  }\n\n  try {\n    const messages = (await import(`./messages/${locale.toLowerCase()}.json`))\n      .default;\n    return {\n      locale: locale,\n      messages: messages,\n    };\n  } catch (e) {\n    return {\n      locale: \"en\",\n      messages: (await import(`./messages/en.json`)).default,\n    };\n  }\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;uCAEe,CAAA,GAAA,4cAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAE,aAAa,EAAE;IACtD,IAAI,SAAS,MAAM;IACnB,IAAI,CAAC,UAAU,CAAC,+GAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAgB;QACvD,SAAS,+GAAA,CAAA,UAAO,CAAC,aAAa;IAChC;IAEA,IAAI;QAAC;KAAQ,CAAC,QAAQ,CAAC,SAAS;QAC9B,SAAS;IACX;IAEA,IAAI,CAAC,+GAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAgB;QAC5C,SAAS;IACX;IAEA,IAAI;QACF,MAAM,WAAW,CAAC;;;;;;;;;kBAAa,CAAC,WAAW,EAAE,OAAO,WAAW,GAAG,KAAK,CAAC,CAAC,EACtE,OAAO;QACV,OAAO;YACL,QAAQ;YACR,UAAU;QACZ;IACF,EAAE,OAAO,GAAG;QACV,OAAO;YACL,QAAQ;YACR,UAAU,CAAC,8GAAkC,EAAE,OAAO;QACxD;IACF;AACF","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/contexts/app.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppContextProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppContextProvider() from the server but AppContextProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/contexts/app.tsx <module evaluation>\",\n    \"AppContextProvider\",\n);\nexport const useAppContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppContext() from the server but useAppContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/contexts/app.tsx <module evaluation>\",\n    \"useAppContext\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,4ZAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,kDACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,4ZAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,kDACA","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/contexts/app.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppContextProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppContextProvider() from the server but AppContextProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/contexts/app.tsx\",\n    \"AppContextProvider\",\n);\nexport const useAppContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppContext() from the server but useAppContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/contexts/app.tsx\",\n    \"useAppContext\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,4ZAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,8BACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,4ZAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8BACA","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_95e1d3b3.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_95e1d3b3-module__jTJ6xG__className\",\n  \"variable\": \"inter_95e1d3b3-module__jTJ6xG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_95e1d3b3.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-sans%22}],%22variableName%22:%22fontSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/auth/session.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NextAuthSessionProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NextAuthSessionProvider() from the server but NextAuthSessionProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/auth/session.tsx <module evaluation>\",\n    \"NextAuthSessionProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,4ZAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,kDACA","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/auth/session.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NextAuthSessionProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NextAuthSessionProvider() from the server but NextAuthSessionProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/auth/session.tsx\",\n    \"NextAuthSessionProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,4ZAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,8BACA","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/providers/theme.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/providers/theme.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,4ZAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qDACA","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/providers/theme.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/providers/theme.tsx\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,4ZAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,iCACA","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Users/shengdongyang/workspace/businessFormula/app/%5Blocale%5D/layout.tsx"],"sourcesContent":["import \"@/app/globals.css\";\n\nimport { getMessages, getTranslations } from \"next-intl/server\";\nimport { locales } from \"@/i18n/locale\";\n\nimport { AppContextProvider } from \"@/contexts/app\";\nimport { Inter as FontSans } from \"next/font/google\";\nimport { Metadata } from \"next\";\nimport { NextAuthSessionProvider } from \"@/auth/session\";\nimport { NextIntlClientProvider } from \"next-intl\";\nimport { ThemeProvider } from \"@/providers/theme\";\nimport { cn } from \"@/lib/utils\";\n\nconst fontSans = FontSans({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ locale: string }>;\n}): Promise<Metadata> {\n  const { locale } = await params;\n  const t = await getTranslations();\n\n  return {\n    title: {\n      template: `%s`,\n      default: t(\"metadata.title\") || \"\",\n    },\n    description: t(\"metadata.description\") || \"\",\n    keywords: t(\"metadata.keywords\") || \"\",\n  };\n}\n\nexport default async function RootLayout({\n  children,\n  params,\n}: Readonly<{\n  children: React.ReactNode;\n  params: Promise<{ locale: string }>;\n}>) {\n  const { locale } = await params;\n  const messages = await getMessages();\n  const webUrl = process.env.NEXT_PUBLIC_WEB_URL || \"\";\n  const googleAdsenseCode = process.env.NEXT_PUBLIC_GOOGLE_ADCODE || \"\";\n\n  return (\n    <html lang={locale} suppressHydrationWarning>\n      <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        {googleAdsenseCode && (\n          <meta name=\"google-adsense-account\" content={googleAdsenseCode} />\n        )}\n\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n\n        {locales &&\n          locales.map((loc) => (\n            <link\n              key={loc}\n              rel=\"alternate\"\n              hrefLang={loc}\n              href={`${webUrl}${loc === \"en\" ? \"\" : `/${loc}`}/`}\n            />\n          ))}\n        <link rel=\"alternate\" hrefLang=\"x-default\" href={webUrl} />\n      </head>\n      <body\n        className={cn(\n          \"min-h-screen bg-background font-sans antialiased overflow-x-hidden\",\n          fontSans.variable\n        )}\n      >\n        <NextIntlClientProvider messages={messages}>\n          <NextAuthSessionProvider>\n            <AppContextProvider>\n              <ThemeProvider attribute=\"class\" disableTransitionOnChange>\n                {children}\n              </ThemeProvider>\n            </AppContextProvider>\n          </NextAuthSessionProvider>\n        </NextIntlClientProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AAEA;;AAGA;AACA;AACA;AACA;;;;;;;;;;;AAOO,eAAe,iBAAiB,EACrC,MAAM,EAGP;IACC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IACzB,MAAM,IAAI,MAAM,CAAA,GAAA,0cAAA,CAAA,kBAAe,AAAD;IAE9B,OAAO;QACL,OAAO;YACL,UAAU,CAAC,EAAE,CAAC;YACd,SAAS,EAAE,qBAAqB;QAClC;QACA,aAAa,EAAE,2BAA2B;QAC1C,UAAU,EAAE,wBAAwB;IACtC;AACF;AAEe,eAAe,WAAW,EACvC,QAAQ,EACR,MAAM,EAIN;IACA,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IACzB,MAAM,WAAW,MAAM,CAAA,GAAA,kcAAA,CAAA,cAAW,AAAD;IACjC,MAAM,SAAS,QAAQ,GAAG,CAAC,mBAAmB,IAAI;IAClD,MAAM,oBAAoB,QAAQ,GAAG,CAAC,yBAAyB,IAAI;IAEnE,qBACE,qZAAC;QAAK,MAAM;QAAQ,wBAAwB;;0BAC1C,qZAAC;;kCACC,qZAAC;wBAAK,MAAK;wBAAW,SAAQ;;;;;;oBAC7B,mCACC,qZAAC;wBAAK,MAAK;wBAAyB,SAAS;;;;;;kCAG/C,qZAAC;wBAAK,KAAI;wBAAO,MAAK;;;;;;oBAErB,8GAAA,CAAA,UAAO,IACN,8GAAA,CAAA,UAAO,CAAC,GAAG,CAAC,CAAC,oBACX,qZAAC;4BAEC,KAAI;4BACJ,UAAU;4BACV,MAAM,GAAG,SAAS,QAAQ,OAAO,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;2BAH7C;;;;;kCAMX,qZAAC;wBAAK,KAAI;wBAAY,UAAS;wBAAY,MAAM;;;;;;;;;;;;0BAEnD,qZAAC;gBACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sEACA,yIAAA,CAAA,UAAQ,CAAC,QAAQ;0BAGnB,cAAA,qZAAC,odAAA,CAAA,yBAAsB;oBAAC,UAAU;8BAChC,cAAA,qZAAC,gHAAA,CAAA,0BAAuB;kCACtB,cAAA,qZAAC,gHAAA,CAAA,qBAAkB;sCACjB,cAAA,qZAAC,mHAAA,CAAA,gBAAa;gCAAC,WAAU;gCAAQ,yBAAyB;0CACvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjB","debugId":null}}]
}