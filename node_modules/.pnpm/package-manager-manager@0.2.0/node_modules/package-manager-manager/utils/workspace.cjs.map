{"version":3,"file":"workspace.cjs","sources":["../../src/utils/workspace.ts"],"sourcesContent":["import { readdir } from 'node:fs/promises';\nimport { join, resolve } from 'node:path';\nimport { cwd } from 'node:process';\nimport { isLockFile } from './locks';\n\ntype ProjectRootDirInfo = {\n\tpath: string;\n\tfiles: string[];\n};\n\n/**\n * Gets the project's root directory which is:\n *  - in case of standard/simple setups the project directory\n *  - in case of workspaces/monorepos the root of it\n *\n * It does so by checking the current path and potentially traversing up the directory tree\n * until it finds a directory containing a `package.json` and a lock file\n *\n * @param path the path to start the search from (defaults to the current working directory)\n * @returns information about the root directory, null if no project root directory could be found\n */\nexport async function getProjectRootDir(path = cwd()): Promise<ProjectRootDirInfo | null> {\n\tconst files = await readdir(path);\n\n\tconst hasPackageJson = files.includes('package.json');\n\n\tconst hasLockFile = files.some(isLockFile);\n\n\tif (hasPackageJson && hasLockFile) {\n\t\treturn {\n\t\t\tpath,\n\t\t\tfiles: await readdir(path),\n\t\t};\n\t}\n\n\tconst parentDir = resolve(join(path, '..'));\n\tif (parentDir !== '/') {\n\t\treturn getProjectRootDir(parentDir);\n\t}\n\n\treturn null;\n}\n"],"names":["getProjectRootDir","path","cwd","files","readdir","hasPackageJson","hasLockFile","isLockFile","parentDir","resolve","join"],"mappings":"8LAqBsB,eAAAA,EAAkBC,EAAOC,EAAAA,MAA2C,CACnF,MAAAC,EAAQ,MAAMC,UAAQH,CAAI,EAE1BI,EAAiBF,EAAM,SAAS,cAAc,EAE9CG,EAAcH,EAAM,KAAKI,EAAU,UAAA,EAEzC,GAAIF,GAAkBC,EACd,MAAA,CACN,KAAAL,EACA,MAAO,MAAMG,EAAA,QAAQH,CAAI,CAAA,EAI3B,MAAMO,EAAYC,EAAAA,QAAQC,EAAAA,KAAKT,EAAM,IAAI,CAAC,EAC1C,OAAIO,IAAc,IACVR,EAAkBQ,CAAS,EAG5B,IACR"}