import "node:fs/promises";
import "node:path";
import "node:process";
import "../utils/locks.js";
import { shellac as i } from "../utils/shellac.js";
import "shellac";
function m(s) {
  return async (...[r]) => {
    try {
      let o;
      if (s.metadata.isYarnClassic) {
        const n = (await i`$ yarn list pattern ${r}`).stdout, e = new RegExp(`^[└─\\s]*${r}@(\\S*)`, "im"), t = n.match(e);
        o = t == null ? void 0 : t[1];
      } else {
        const n = (await i`$ yarn why ${r}`).stdout, e = new RegExp(`^[└─\\s]*${r}@(?:\\S+:)?(\\S*)`, "im"), t = n.match(e);
        o = t == null ? void 0 : t[1];
      }
      return o ? { name: r, version: o } : null;
    } catch {
      throw new Error(`An error occurred while gathering the package info of "${r}"`);
    }
  };
}
export {
  m as getYarnGetPackageInfoFunction
};
//# sourceMappingURL=yarn.js.map
