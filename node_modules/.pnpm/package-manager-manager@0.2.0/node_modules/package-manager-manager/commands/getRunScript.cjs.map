{"version":3,"file":"getRunScript.cjs","sources":["../../src/commands/getRunScript.ts"],"sourcesContent":["import type { PackageManager } from '../packageManager';\nimport type { CommandScriptStruct } from './CommandStruct';\n\n/**\n * The subset of properties of PackageManager that are relevant when dealing with scripts\n */\ntype PackageManagerForScripts = Pick<PackageManager, 'name' | 'cliCommandKeywords'>;\n\nclass RunScriptStruct implements CommandScriptStruct {\n\tcmd: string;\n\n\tpmCmd?: string = undefined;\n\n\ttargetArgs: string[];\n\n\targsNeedDoubleDashes: boolean;\n\n\tconstructor(\n\t\tpackageManager: PackageManagerForScripts,\n\t\tpublic script: string,\n\t\toptions?: Partial<GetRunScriptOptions>,\n\t) {\n\t\tthis.targetArgs = options?.args ?? [];\n\n\t\tconst format = options?.format ?? 'short';\n\n\t\tthis.cmd = packageManager.name;\n\t\tconst includeRun = RunScriptStruct.#shouldRunKeywordBeIncluded(packageManager, script, format);\n\t\tif (includeRun) {\n\t\t\tthis.pmCmd = 'run';\n\t\t}\n\n\t\tthis.argsNeedDoubleDashes = ['npm', 'bun'].includes(packageManager.name);\n\t}\n\n\tget cmdArgs(): string[] {\n\t\treturn [\n\t\t\t...(this.pmCmd ? [this.pmCmd] : []),\n\t\t\tthis.script,\n\t\t\t...(this.targetArgs.length && this.argsNeedDoubleDashes ? ['--'] : []),\n\t\t\t...this.targetArgs,\n\t\t];\n\t}\n\n\ttoString(): string {\n\t\treturn `${this.cmd}${this.pmCmd ? ` ${this.pmCmd}` : ''} ${this.script}${\n\t\t\tthis.targetArgs.length\n\t\t\t\t? `${this.argsNeedDoubleDashes ? ' --' : ''} ${this.targetArgs.join(' ')}`\n\t\t\t\t: ''\n\t\t}`;\n\t}\n\n\tstatic #shouldRunKeywordBeIncluded(\n\t\tpackageManager: PackageManagerForScripts,\n\t\tscript: string,\n\t\tformat: GetRunScriptOptions['format'],\n\t): boolean {\n\t\tif (format === 'full') return true;\n\n\t\tif (script === 'start') return false;\n\n\t\tif (packageManager.name === 'npm') return true;\n\n\t\tconst scriptCollidesWithCliKeyword = packageManager.cliCommandKeywords.has(script);\n\t\tif (scriptCollidesWithCliKeyword) return true;\n\n\t\treturn false;\n\t}\n}\n\nexport type GetRunScriptOptions = {\n\t/**\n\t * The arguments to pass to the script (e.g. `-h`, `--info`, etc...)\n\t *\n\t * defaults to `[]`\n\t */\n\targs: string[];\n\t/**\n\t * Wether the command represents a full command or a shortened one\n\t * (i.e. whether unnecessary keywords are removed or not)\n\t * (e.g. short format = `'pnpm dev'`, long format = `'pnpm run dev'`)\n\t *\n\t * defaults to `'short'`\n\t */\n\tformat: 'full' | 'short';\n};\n\nexport type GetRunScript = (\n\tscript: string,\n\toptions?: Partial<GetRunScriptOptions>,\n) => Promise<string | null>;\n\nexport type GetRunScriptStruct = (\n\tscript: string,\n\toptions?: Partial<GetRunScriptOptions>,\n) => Promise<CommandScriptStruct | null>;\n\nexport function getRunScriptFunctions(packageManager: PackageManagerForScripts): {\n\tgetRunScript: GetRunScript;\n\tgetRunScriptStruct: GetRunScriptStruct;\n} {\n\tconst getRunScriptStruct: GetRunScriptStruct = async (script, options) => {\n\t\tif (!script) return null;\n\t\treturn new RunScriptStruct(packageManager, script, options);\n\t};\n\n\tconst getRunScript: GetRunScript = async (...args) =>\n\t\t(await getRunScriptStruct(...args))?.toString() ?? null;\n\n\treturn { getRunScript, getRunScriptStruct };\n}\n"],"names":["_RunScriptStruct","packageManager","script","options","format","__privateMethod","_a","_shouldRunKeywordBeIncluded","shouldRunKeywordBeIncluded_fn","RunScriptStruct","__privateAdd","getRunScriptFunctions","getRunScriptStruct","args"],"mappings":"gVAQA,MAAMA,EAAN,KAAqD,CASpD,YACCC,EACOC,EACPC,EACC,OAFM,KAAA,OAAAD,EARS,KAAA,MAAA,OAWX,KAAA,YAAaC,GAAA,YAAAA,EAAS,OAAQ,CAAA,EAE7B,MAAAC,GAASD,GAAA,YAAAA,EAAS,SAAU,QAElC,KAAK,IAAMF,EAAe,KACPI,EAAAC,EAAAN,EAAgBO,EAAAC,GAAhB,KAAAF,EAA4CL,EAAgBC,EAAQE,KAEtF,KAAK,MAAQ,OAGd,KAAK,qBAAuB,CAAC,MAAO,KAAK,EAAE,SAASH,EAAe,IAAI,CACxE,CAEA,IAAI,SAAoB,CAChB,MAAA,CACN,GAAI,KAAK,MAAQ,CAAC,KAAK,KAAK,EAAI,CAAC,EACjC,KAAK,OACL,GAAI,KAAK,WAAW,QAAU,KAAK,qBAAuB,CAAC,IAAI,EAAI,CAAC,EACpE,GAAG,KAAK,UAAA,CAEV,CAEA,UAAmB,CACX,MAAA,GAAG,KAAK,MAAM,KAAK,MAAQ,IAAI,KAAK,QAAU,MAAM,KAAK,SAC/D,KAAK,WAAW,OACb,GAAG,KAAK,qBAAuB,MAAQ,MAAM,KAAK,WAAW,KAAK,GAAG,IACrE,IAEL,CAkBD,EA5DA,IAAMQ,EAANT,EA4CQO,EAAA,YAAAC,EAAA,SACNP,EACAC,EACAE,EACU,CACV,OAAIA,IAAW,OAAe,GAE1BF,IAAW,QAAgB,GAE3B,GAAAD,EAAe,OAAS,OAESA,EAAe,mBAAmB,IAAIC,CAAM,EAIlF,EAfAQ,EA5CKD,EA4CEF,GA6CD,SAASI,EAAsBV,EAGpC,CACK,MAAAW,EAAyC,MAAOV,EAAQC,IACxDD,EACE,IAAIO,EAAgBR,EAAgBC,EAAQC,CAAO,EADtC,KAOd,MAAA,CAAE,aAH0B,SAAUU,WAC3C,QAAAP,EAAA,MAAMM,EAAmB,GAAGC,CAAI,IAAhC,YAAAP,EAAoC,aAAc,MAE7B,mBAAAM,EACxB"}