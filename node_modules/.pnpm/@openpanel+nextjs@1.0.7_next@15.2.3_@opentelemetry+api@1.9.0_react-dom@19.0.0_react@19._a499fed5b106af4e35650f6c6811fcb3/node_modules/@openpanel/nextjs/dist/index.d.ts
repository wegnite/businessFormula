import React from 'react';
import { TrackProperties, IdentifyPayload, IncrementPayload, DecrementPayload, OpenPanelOptions } from '@openpanel/web';
export * from '@openpanel/web';

type OpenPanelComponentProps = Omit<OpenPanelOptions, 'filter'> & {
    profileId?: string;
    cdnUrl?: string;
    filter?: string;
    globalProperties?: Record<string, unknown>;
};
declare function OpenPanelComponent({ profileId, cdnUrl, globalProperties, ...options }: OpenPanelComponentProps): React.JSX.Element;
type IdentifyComponentProps = IdentifyPayload;
declare function IdentifyComponent(props: IdentifyComponentProps): React.JSX.Element;
declare function SetGlobalPropertiesComponent(props: Record<string, unknown>): React.JSX.Element;
declare function useOpenPanel(): {
    track: typeof track;
    screenView: typeof screenView;
    identify: typeof identify;
    increment: typeof increment;
    decrement: typeof decrement;
    clear: typeof clear;
    setGlobalProperties: typeof setGlobalProperties;
};
declare function setGlobalProperties(properties: Record<string, unknown>): void;
declare function track(name: string, properties?: TrackProperties): void;
declare function screenView(properties?: TrackProperties): void;
declare function screenView(path: string, properties?: TrackProperties): void;
declare function identify(payload: IdentifyPayload): void;
declare function increment(payload: IncrementPayload): void;
declare function decrement(payload: DecrementPayload): void;
declare function clear(): void;

export { IdentifyComponent, OpenPanelComponent, SetGlobalPropertiesComponent, useOpenPanel };
