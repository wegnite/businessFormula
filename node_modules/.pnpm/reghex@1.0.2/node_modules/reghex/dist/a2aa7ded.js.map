{"version":3,"file":"a2aa7ded.js","sources":["../src/parser.js","../src/babel/sharedIds.js","../src/babel/generator.js","../src/babel/transform.js"],"sourcesContent":["export const parse = (quasis, expressions) => {\n  let quasiIndex = 0;\n  let stackIndex = 0;\n\n  const sequenceStack = [];\n  const rootSequence = {\n    type: 'sequence',\n    sequence: [],\n    alternation: null,\n  };\n\n  let currentGroup = null;\n  let lastMatch;\n  let currentSequence = rootSequence;\n\n  while (stackIndex < quasis.length + expressions.length) {\n    if (stackIndex % 2 !== 0) {\n      const expression = expressions[stackIndex++ >> 1];\n\n      currentSequence.sequence.push({\n        type: 'expression',\n        expression,\n        quantifier: null,\n      });\n    }\n\n    const quasi = quasis[stackIndex >> 1];\n    while (quasiIndex < quasi.length) {\n      const char = quasi[quasiIndex++];\n\n      if (char === ' ' || char === '\\t' || char === '\\r' || char === '\\n') {\n        continue;\n      } else if (char === '|' && currentSequence.sequence.length > 0) {\n        currentSequence = currentSequence.alternation = {\n          type: 'sequence',\n          sequence: [],\n          alternation: null,\n        };\n\n        continue;\n      } else if (char === ')' && currentSequence.sequence.length > 0) {\n        currentGroup = null;\n        currentSequence = sequenceStack.pop();\n        if (currentSequence) continue;\n      } else if (char === '(') {\n        currentGroup = {\n          type: 'group',\n          sequence: {\n            type: 'sequence',\n            sequence: [],\n            alternation: null,\n          },\n          capturing: true,\n          lookahead: null,\n          quantifier: null,\n        };\n\n        sequenceStack.push(currentSequence);\n        currentSequence.sequence.push(currentGroup);\n        currentSequence = currentGroup.sequence;\n        continue;\n      } else if (\n        char === '?' &&\n        currentSequence.sequence.length === 0 &&\n        currentGroup\n      ) {\n        const nextChar = quasi[quasiIndex++];\n        if (!nextChar) {\n          throw new SyntaxError('Unexpected end of input after ' + char);\n        }\n\n        if (nextChar === ':') {\n          currentGroup.capturing = false;\n          continue;\n        } else if (nextChar === '=') {\n          currentGroup.capturing = false;\n          currentGroup.lookahead = 'positive';\n          continue;\n        } else if (nextChar === '!') {\n          currentGroup.capturing = false;\n          currentGroup.lookahead = 'negative';\n          continue;\n        }\n      } else if (\n        (char === '?' || char === '+' || char === '*') &&\n        (lastMatch =\n          currentSequence.sequence[currentSequence.sequence.length - 1])\n      ) {\n        if (lastMatch.type === 'group' && lastMatch.lookahead) {\n          throw new SyntaxError('Unexpected quantifier on lookahead group');\n        }\n\n        lastMatch.quantifier = {\n          type: 'quantifier',\n          required: char === '+',\n          singular: char === '?',\n        };\n\n        continue;\n      }\n\n      throw new SyntaxError('Unexpected token ' + char);\n    }\n\n    stackIndex++;\n    quasiIndex = 0;\n  }\n\n  return rootSequence;\n};\n","export class SharedIds {\n  constructor(t) {\n    this.t = t;\n    this.execId = t.identifier('_exec');\n    this.substrId = t.identifier('_substr');\n    this.patternId = t.identifier('_pattern');\n    this.tagId = t.identifier('tag');\n  }\n\n  get node() {\n    return this.t.identifier('node');\n  }\n\n  get match() {\n    return this.t.identifier('match');\n  }\n\n  get state() {\n    return this.t.identifier('state');\n  }\n\n  get exec() {\n    return this.t.identifier(this.execId.name);\n  }\n\n  get substr() {\n    return this.t.identifier(this.substrId.name);\n  }\n\n  get pattern() {\n    return this.t.identifier(this.patternId.name);\n  }\n\n  get tag() {\n    return this.t.identifier(this.tagId.name);\n  }\n}\n","let t;\nlet ids = {};\n\nexport function initGenerator(_ids, _t) {\n  ids = _ids;\n  t = _t;\n}\n\n/** var id = state.index; */\nclass AssignIndexNode {\n  constructor(id) {\n    this.id = id;\n  }\n\n  statement() {\n    const member = t.memberExpression(ids.state, t.identifier('index'));\n    return t.variableDeclaration('var', [\n      t.variableDeclarator(this.id, member),\n    ]);\n  }\n}\n\n/** state.index = id; */\nclass RestoreIndexNode {\n  constructor(id) {\n    this.id = id;\n  }\n\n  statement() {\n    const expression = t.assignmentExpression(\n      '=',\n      t.memberExpression(ids.state, t.identifier('index')),\n      this.id\n    );\n\n    return t.expressionStatement(expression);\n  }\n}\n\n/** var id = node.length; */\nclass AssignLengthNode {\n  constructor(id) {\n    this.id = id;\n  }\n\n  statement() {\n    return t.variableDeclaration('var', [\n      t.variableDeclarator(\n        this.id,\n        t.memberExpression(ids.node, t.identifier('length'))\n      ),\n    ]);\n  }\n}\n\n/** node.length = id; */\nclass RestoreLengthNode {\n  constructor(id) {\n    this.id = id;\n  }\n\n  statement() {\n    const expression = t.assignmentExpression(\n      '=',\n      t.memberExpression(ids.node, t.identifier('length')),\n      this.id\n    );\n\n    return t.expressionStatement(expression);\n  }\n}\n\n/** return; break id; */\nclass AbortNode {\n  constructor(id) {\n    this.id = id || null;\n  }\n\n  statement() {\n    const statement = this.id ? t.breakStatement(this.id) : t.returnStatement();\n    return statement;\n  }\n}\n\n/** if (condition) { return; break id; } */\nclass AbortConditionNode {\n  constructor(condition, opts) {\n    this.condition = condition || null;\n\n    this.abort = opts.abort;\n    this.abortCondition = opts.abortCondition || null;\n    this.restoreIndex = opts.restoreIndex;\n  }\n\n  statement() {\n    return t.ifStatement(\n      this.condition,\n      t.blockStatement(\n        [this.restoreIndex.statement(), this.abort.statement()].filter(Boolean)\n      ),\n      this.abortCondition ? this.abortCondition.statement() : null\n    );\n  }\n}\n\n/** Generates a full matcher for an expression */\nclass ExpressionNode {\n  constructor(ast, depth, opts) {\n    this.ast = ast;\n    this.depth = depth || 0;\n    this.capturing = !!opts.capturing;\n    this.restoreIndex = opts.restoreIndex;\n    this.restoreLength = opts.restoreLength || null;\n    this.abortCondition = opts.abortCondition || null;\n    this.abort = opts.abort || null;\n  }\n\n  statements() {\n    const execMatch = this.ast.expression;\n    const assignMatch = t.assignmentExpression('=', ids.match, execMatch);\n\n    const successNodes = t.blockStatement([\n      t.expressionStatement(\n        t.callExpression(t.memberExpression(ids.node, t.identifier('push')), [\n          ids.match,\n        ])\n      ),\n    ]);\n\n    const abortNodes = t.blockStatement(\n      [\n        this.abortCondition && this.abortCondition.statement(),\n        this.abort && this.restoreLength && this.restoreLength.statement(),\n        this.restoreIndex && this.restoreIndex.statement(),\n        this.abort && this.abort.statement(),\n      ].filter(Boolean)\n    );\n\n    return [\n      !this.capturing\n        ? t.ifStatement(t.unaryExpression('!', execMatch), abortNodes)\n        : t.ifStatement(assignMatch, successNodes, abortNodes),\n    ];\n  }\n}\n\n/** Generates a full matcher for a group */\nclass GroupNode {\n  constructor(ast, depth, opts) {\n    this.ast = ast;\n    this.depth = depth || 0;\n    if (ast.sequence.length === 1) {\n      return new ExpressionNode(ast.sequence[0], depth, opts);\n    }\n\n    const lengthId = t.identifier(`length_${depth}`);\n    const childOpts = {\n      ...opts,\n      capturing: !!opts.capturing && !!ast.capturing,\n    };\n\n    this.assignLength = null;\n    if (!childOpts.restoreLength && childOpts.capturing) {\n      this.assignLength = new AssignLengthNode(lengthId);\n      childOpts.restoreLength = new RestoreLengthNode(lengthId);\n    }\n\n    this.alternation = new AlternationNode(ast.sequence, depth + 1, childOpts);\n  }\n\n  statements() {\n    return [\n      this.assignLength && this.assignLength.statement(),\n      ...this.alternation.statements(),\n    ].filter(Boolean);\n  }\n}\n\n/** Generates looping logic around another group or expression matcher */\nclass QuantifierNode {\n  constructor(ast, depth, opts) {\n    const { quantifier } = ast;\n    this.ast = ast;\n    this.depth = depth || 0;\n\n    const invertId = t.identifier(`invert_${this.depth}`);\n    const loopId = t.identifier(`loop_${this.depth}`);\n    const iterId = t.identifier(`iter_${this.depth}`);\n    const indexId = t.identifier(`index_${this.depth}`);\n    const ChildNode = ast.type === 'group' ? GroupNode : ExpressionNode;\n    const childOpts = { ...opts };\n\n    this.assignIndex = null;\n    this.restoreIndex = null;\n    this.blockId = null;\n    this.abort = null;\n\n    if (ast.type === 'group' && !!ast.lookahead) {\n      this.restoreIndex = new RestoreIndexNode(indexId);\n      this.assignIndex = new AssignIndexNode(indexId);\n    }\n\n    if (ast.type === 'group' && ast.lookahead === 'negative') {\n      childOpts.abort = new AbortNode(invertId);\n      childOpts.restoreIndex = this.restoreIndex;\n      this.restoreIndex = opts.restoreIndex;\n      this.blockId = invertId;\n      this.abort = opts.abort;\n    }\n\n    if (quantifier && !quantifier.singular && quantifier.required) {\n      childOpts.abortCondition = new AbortConditionNode(iterId, {\n        ...opts,\n        restoreIndex: new RestoreIndexNode(indexId),\n        abort: new AbortNode(loopId),\n      });\n    } else if (quantifier && !quantifier.singular) {\n      childOpts.restoreLength = null;\n      childOpts.restoreIndex = new RestoreIndexNode(indexId);\n      childOpts.abort = new AbortNode(loopId);\n      childOpts.abortCondition = null;\n    } else if (quantifier && !quantifier.required) {\n      childOpts.restoreIndex = new RestoreIndexNode(indexId);\n      childOpts.abortCondition = null;\n      childOpts.abort = null;\n    }\n\n    this.childNode = new ChildNode(ast, depth, childOpts);\n  }\n\n  statements() {\n    const { quantifier } = this.ast;\n    const loopId = t.identifier(`loop_${this.depth}`);\n    const iterId = t.identifier(`iter_${this.depth}`);\n    const indexId = t.identifier(`index_${this.depth}`);\n    const assignIndex = new AssignIndexNode(indexId);\n\n    let statements;\n    if (quantifier && !quantifier.singular && quantifier.required) {\n      statements = [\n        t.labeledStatement(\n          loopId,\n          t.forStatement(\n            t.variableDeclaration('var', [\n              t.variableDeclarator(iterId, t.numericLiteral(0)),\n            ]),\n            t.booleanLiteral(true),\n            t.updateExpression('++', iterId),\n            t.blockStatement([\n              assignIndex.statement(),\n              ...this.childNode.statements(),\n            ])\n          )\n        ),\n      ];\n    } else if (quantifier && !quantifier.singular) {\n      statements = [\n        t.labeledStatement(\n          loopId,\n          t.whileStatement(\n            t.booleanLiteral(true),\n            t.blockStatement([\n              assignIndex.statement(),\n              ...this.childNode.statements(),\n            ])\n          )\n        ),\n      ];\n    } else if (quantifier && !quantifier.required) {\n      statements = [assignIndex.statement(), ...this.childNode.statements()];\n    } else {\n      statements = this.childNode.statements();\n    }\n\n    if (this.blockId && this.assignIndex && this.restoreIndex) {\n      statements = [\n        t.labeledStatement(\n          this.blockId,\n          t.blockStatement(\n            [\n              this.assignIndex.statement(),\n              ...statements,\n              this.restoreIndex.statement(),\n              this.abort.statement(),\n            ].filter(Boolean)\n          )\n        ),\n      ].filter(Boolean);\n    } else if (this.assignIndex && this.restoreIndex) {\n      statements.unshift(this.assignIndex.statement());\n      statements.push(this.restoreIndex.statement());\n    }\n\n    return statements;\n  }\n}\n\n/** Generates a matcher of a sequence of sub-matchers for a single sequence */\nclass SequenceNode {\n  constructor(ast, depth, opts) {\n    this.ast = ast;\n    this.depth = depth || 0;\n\n    const indexId = t.identifier(`index_${depth}`);\n    const blockId = t.identifier(`block_${this.depth}`);\n\n    this.returnStatement = opts.returnStatement;\n    this.assignIndex = ast.alternation ? new AssignIndexNode(indexId) : null;\n\n    this.quantifiers = ast.sequence.map((childAst) => {\n      return new QuantifierNode(childAst, depth, {\n        ...opts,\n        restoreIndex: ast.alternation\n          ? new RestoreIndexNode(indexId)\n          : opts.restoreIndex,\n        abortCondition: ast.alternation ? null : opts.abortCondition,\n        abort: ast.alternation ? new AbortNode(blockId) : opts.abort,\n      });\n    });\n  }\n\n  statements() {\n    const blockId = t.identifier(`block_${this.depth}`);\n    const alternationId = t.identifier(`alternation_${this.depth}`);\n    const statements = this.quantifiers.reduce((block, node) => {\n      block.push(...node.statements());\n      return block;\n    }, []);\n\n    if (!this.ast.alternation) {\n      return statements;\n    }\n\n    const abortNode =\n      this.depth === 0 ? this.returnStatement : t.breakStatement(alternationId);\n\n    return [\n      t.labeledStatement(\n        blockId,\n        t.blockStatement([\n          this.assignIndex && this.assignIndex.statement(),\n          ...statements,\n          abortNode,\n        ])\n      ),\n    ];\n  }\n}\n\n/** Generates matchers for sequences with (or without) alternations */\nclass AlternationNode {\n  constructor(ast, depth, opts) {\n    this.ast = ast;\n    this.depth = depth || 0;\n    this.sequences = [];\n    for (let current = ast; current; current = current.alternation) {\n      this.sequences.push(new SequenceNode(current, depth, opts));\n    }\n  }\n\n  statements() {\n    if (this.sequences.length === 1) {\n      return this.sequences[0].statements();\n    }\n\n    const statements = [];\n    for (let i = 0; i < this.sequences.length; i++) {\n      statements.push(...this.sequences[i].statements());\n    }\n\n    if (this.depth === 0) {\n      return statements;\n    }\n\n    const alternationId = t.identifier(`alternation_${this.depth}`);\n    return [t.labeledStatement(alternationId, t.blockStatement(statements))];\n  }\n}\n\nexport class RootNode {\n  constructor(ast, nameNode, transformNode) {\n    const indexId = t.identifier('last_index');\n    const node = t.callExpression(ids.tag, [ids.node, nameNode]);\n\n    this.returnStatement = t.returnStatement(\n      transformNode ? t.callExpression(transformNode, [node]) : node\n    );\n\n    this.assignIndex = new AssignIndexNode(indexId);\n    this.node = new AlternationNode(ast, 0, {\n      returnStatement: this.returnStatement,\n      restoreIndex: new RestoreIndexNode(indexId, true),\n      restoreLength: null,\n      abortCondition: null,\n      abort: new AbortNode(),\n      capturing: true,\n    });\n  }\n\n  statements() {\n    return [\n      this.assignIndex.statement(),\n      t.variableDeclaration('var', [\n        t.variableDeclarator(ids.match),\n        t.variableDeclarator(ids.node, t.arrayExpression()),\n      ]),\n      ...this.node.statements(),\n      this.returnStatement,\n    ];\n  }\n}\n","import { parse } from '../parser';\nimport { SharedIds } from './sharedIds';\nimport { initGenerator, RootNode } from './generator';\n\nexport function makeHelpers(t) {\n  const regexPatternsRe = /^[()\\[\\]|.+?*]|[^\\\\][()\\[\\]|.+?*$^]|\\\\[wdsWDS]/;\n  const importSourceRe = /reghex$|^reghex\\/macro/;\n  const importName = 'reghex';\n  const ids = new SharedIds(t);\n  initGenerator(ids, t);\n\n  let _hasUpdatedImport = false;\n\n  return {\n    /** Adds the reghex import declaration to the Program scope */\n    updateImport(path) {\n      if (_hasUpdatedImport) return;\n      if (!importSourceRe.test(path.node.source.value)) return;\n      _hasUpdatedImport = true;\n\n      const defaultSpecifierIndex = path.node.specifiers.findIndex((node) => {\n        return t.isImportDefaultSpecifier(node);\n      });\n\n      if (defaultSpecifierIndex > -1) {\n        path.node.specifiers.splice(defaultSpecifierIndex, 1);\n      }\n\n      if (path.node.source.value !== importName) {\n        path.node.source = t.stringLiteral(importName);\n      }\n\n      path.node.specifiers.push(\n        t.importSpecifier(\n          (ids.execId = path.scope.generateUidIdentifier('exec')),\n          t.identifier('_exec')\n        ),\n        t.importSpecifier(\n          (ids.substrId = path.scope.generateUidIdentifier('substr')),\n          t.identifier('_substr')\n        ),\n        t.importSpecifier(\n          (ids.patternId = path.scope.generateUidIdentifier('pattern')),\n          t.identifier('_pattern')\n        )\n      );\n\n      const tagImport = path.node.specifiers.find((node) => {\n        return t.isImportSpecifier(node) && node.imported.name === 'tag';\n      });\n      if (!tagImport) {\n        path.node.specifiers.push(\n          t.importSpecifier(\n            (ids.tagId = path.scope.generateUidIdentifier('tag')),\n            t.identifier('tag')\n          )\n        );\n      } else {\n        ids.tagId = tagImport.imported;\n      }\n    },\n\n    /** Determines whether the given tagged template expression is a reghex match */\n    isMatch(path) {\n      if (\n        t.isTaggedTemplateExpression(path.node) &&\n        t.isCallExpression(path.node.tag) &&\n        t.isIdentifier(path.node.tag.callee) &&\n        path.scope.hasBinding(path.node.tag.callee.name)\n      ) {\n        if (t.isVariableDeclarator(path.parentPath))\n          path.parentPath._isMatch = true;\n        return true;\n      }\n\n      return (\n        t.isVariableDeclarator(path.parentPath) && path.parentPath._isMatch\n      );\n    },\n\n    /** Given a reghex match, returns the path to reghex's match import declaration */\n    getMatchImport(path) {\n      t.assertTaggedTemplateExpression(path.node);\n      const binding = path.scope.getBinding(path.node.tag.callee.name);\n\n      if (\n        binding.kind !== 'module' ||\n        !t.isImportDeclaration(binding.path.parent) ||\n        !importSourceRe.test(binding.path.parent.source.value) ||\n        !t.isImportDefaultSpecifier(binding.path.node)\n      ) {\n        return null;\n      }\n\n      return binding.path.parentPath;\n    },\n\n    /** Given a match, returns an evaluated name or a best guess */\n    getMatchName(path) {\n      t.assertTaggedTemplateExpression(path.node);\n      const nameArgumentPath = path.get('tag.arguments.0');\n      const { confident, value } = nameArgumentPath.evaluate();\n      if (!confident && t.isIdentifier(nameArgumentPath.node)) {\n        return nameArgumentPath.node.name;\n      } else if (confident && typeof value === 'string') {\n        return value;\n      } else {\n        return path.scope.generateUidIdentifierBasedOnNode(path.node);\n      }\n    },\n\n    /** Given a match, hoists its expressions in front of the match's statement */\n    _prepareExpressions(path) {\n      t.assertTaggedTemplateExpression(path.node);\n\n      const variableDeclarators = [];\n      const matchName = this.getMatchName(path);\n\n      const hoistedExpressions = path.node.quasi.expressions.map(\n        (expression, i) => {\n          if (\n            t.isIdentifier(expression) &&\n            path.scope.hasBinding(expression.name)\n          ) {\n            const binding = path.scope.getBinding(expression.name);\n            if (t.isVariableDeclarator(binding.path.node)) {\n              const matchPath = binding.path.get('init');\n              if (this.isMatch(matchPath)) return expression;\n            }\n          } else if (\n            t.isRegExpLiteral(expression) &&\n            !regexPatternsRe.test(expression.pattern)\n          ) {\n            // NOTE: This is an optimisation path, where the pattern regex is inlined\n            // and has determined to be \"simple\" enough to be turned into a string\n            return t.stringLiteral(\n              expression.pattern.replace(/\\\\./g, (x) => x[1])\n            );\n          }\n\n          const id = path.scope.generateUidIdentifier(\n            `${matchName}_expression`\n          );\n\n          variableDeclarators.push(\n            t.variableDeclarator(\n              id,\n              t.callExpression(ids.pattern, [expression])\n            )\n          );\n\n          return id;\n        }\n      );\n\n      if (variableDeclarators.length) {\n        path\n          .getStatementParent()\n          .insertBefore(t.variableDeclaration('var', variableDeclarators));\n      }\n\n      return hoistedExpressions.map((id) => {\n        // Use _substr helper instead if the expression is a string\n        if (t.isStringLiteral(id)) {\n          return t.callExpression(ids.substr, [ids.state, id]);\n        }\n\n        // Directly call expression if it's sure to be another matcher\n        const binding = path.scope.getBinding(id.name);\n        if (binding && t.isVariableDeclarator(binding.path.node)) {\n          const matchPath = binding.path.get('init');\n          if (this.isMatch(matchPath)) {\n            return t.callExpression(id, [ids.state]);\n          }\n        }\n\n        return t.callExpression(ids.exec, [ids.state, id]);\n      });\n    },\n\n    _prepareTransform(path) {\n      const transformNode = path.node.tag.arguments[1];\n      if (!transformNode) return null;\n      if (t.isIdentifier(transformNode)) return transformNode;\n\n      const matchName = this.getMatchName(path);\n      const id = path.scope.generateUidIdentifier(`${matchName}_transform`);\n      const declarator = t.variableDeclarator(id, transformNode);\n\n      path\n        .getStatementParent()\n        .insertBefore(t.variableDeclaration('var', [declarator]));\n      return id;\n    },\n\n    transformMatch(path) {\n      if (!path.node.tag.arguments.length) {\n        throw path\n          .get('tag')\n          .buildCodeFrameError(\n            'match() must at least be called with a node name'\n          );\n      }\n\n      const matchName = this.getMatchName(path);\n      const nameNode = path.node.tag.arguments[0];\n      const quasis = path.node.quasi.quasis.map((x) => x.value.cooked);\n\n      const expressions = this._prepareExpressions(path);\n      const transformNode = this._prepareTransform(path);\n\n      let ast;\n      try {\n        ast = parse(quasis, expressions);\n      } catch (error) {\n        if (error.name !== 'SyntaxError') throw error;\n        throw path.get('quasi').buildCodeFrameError(error.message);\n      }\n\n      const generator = new RootNode(ast, nameNode, transformNode);\n      const body = t.blockStatement(generator.statements());\n      const matchFunctionId = path.scope.generateUidIdentifier(matchName);\n      const matchFunction = t.functionExpression(\n        matchFunctionId,\n        [ids.state],\n        body\n      );\n      path.replaceWith(matchFunction);\n    },\n  };\n}\n"],"names":["const","parse","quasis","expressions","let","quasiIndex","stackIndex","sequenceStack","rootSequence","type","sequence","alternation","currentGroup","lastMatch","currentSequence","length","expression","push","quantifier","quasi","char","pop","capturing","lookahead","nextChar","SyntaxError","required","singular","SharedIds","t","execId","identifier","substrId","patternId","tagId","prototypeAccessors","node","match","state","exec","name","substr","pattern","tag","ids","initGenerator","_ids","_t","AssignIndexNode","id","statement","member","memberExpression","variableDeclaration","variableDeclarator","RestoreIndexNode","assignmentExpression","expressionStatement","AssignLengthNode","RestoreLengthNode","AbortNode","breakStatement","returnStatement","AbortConditionNode","condition","opts","abort","abortCondition","restoreIndex","ifStatement","blockStatement","filter","Boolean","ExpressionNode","ast","depth","restoreLength","statements","execMatch","assignMatch","successNodes","callExpression","abortNodes","unaryExpression","GroupNode","lengthId","childOpts","assignLength","AlternationNode","QuantifierNode","invertId","loopId","iterId","indexId","ChildNode","assignIndex","blockId","childNode","labeledStatement","forStatement","numericLiteral","booleanLiteral","updateExpression","whileStatement","unshift","SequenceNode","quantifiers","map","childAst","block","alternationId","reduce","abortNode","sequences","current","i","RootNode","nameNode","transformNode","arrayExpression","x","value","cooked","makeHelpers","regexPatternsRe","importSourceRe","importName","_hasUpdatedImport","isImportDefaultSpecifier","isImportSpecifier","imported","updateImport","path","test","source","defaultSpecifierIndex","specifiers","findIndex","splice","stringLiteral","importSpecifier","scope","generateUidIdentifier","tagImport","find","isMatch","isTaggedTemplateExpression","isCallExpression","isIdentifier","callee","hasBinding","isVariableDeclarator","parentPath","_isMatch","getMatchImport","assertTaggedTemplateExpression","binding","getBinding","kind","isImportDeclaration","parent","getMatchName","nameArgumentPath","get","evaluate","confident","generateUidIdentifierBasedOnNode","_prepareExpressions","variableDeclarators","matchName","hoistedExpressions","matchPath","this","isRegExpLiteral","replace","getStatementParent","insertBefore","isStringLiteral","_prepareTransform","arguments","declarator","transformMatch","buildCodeFrameError","error","message","generator","body","matchFunctionId","matchFunction","functionExpression","replaceWith"],"mappings":"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"}